name: c-core
version: 2.2.14
scm: github.com/pubnub/c-core
changelog:
  - version: v2.2.14
    changes:
      - type: bug
        text: Fix removing the first context from the timer list
  - version: v2.2.13
    changes:
      - type: feature
        text: Support OpenSSL 1.1.0+ (BIO_(s|g)et_conn_ip -> BIO_(s|g)et_conn_address)
      - type: bug
        text: Handle chunks larger than http_buff
      - type: bug
        text: Fix receiving data longer than http_buff at a time
  - version: v2.2.12
    changes:
      - type: bug
        text: Cleanups, fix build issue and warnings on Windows
  - version: v2.2.11
    changes:
      - type: bug
        text: Fix resource leaks in C++ pubnub::futres on Windows
  - version: v2.2.10
    changes:
      - type: bug
        text: Fix build issues on Mac
  - version: v2.2.9
    changes:
      - type: bug
        text: Fix high CPU utilization when network out on Mac
  - version: v2.2.8
    changes:
      - type: bug
        text: Fix off-by-one error
  - version: v2.2.7
    changes:
      - type: bug
        text: Fix handling of recv() errrno on MacOS
  - version: v2.2.6
    changes:
      - type: feature
        text: Support OpenSSL 1.1.0+ (removed BIO_set_conn_port_int)
      - type: bug
        text: Some logging code was not using proper types
  - version: v2.2.5
    changes:
      - type: bug
        text: Fix potential issue in interpreting UTF-8 char values
  - version: v2.2.4
    changes:
      - type: bug
        text: Fix off-by-one error
  - version: v2.2.3
    changes:
      - type: bug
        text: Fix handling of segmented messages
      - type: feature
        text: Improve exising and add new logging
  - version: v2.2.2
    changes:
      - type: feature
        text: Improve parsing of bad publish/subscribe key error
      - type: feature
        text: Add option to turn of SSL/TLS session reuse
      - type: feature
        text: PNR_TIMEOUT no longer resets the time token
      - type: bug
        text: Fixes and improvements of the console sample application
  - version: v2.2.1
    changes:
      - type: bug
        text: Fix C++ pubnub::futres destructor hanging up
  - version: v2.2.0
    changes:
      - type: feature
        text: First "core feature complete" release
features:
  channel-groups:
    - CHANNEL-GROUPS-ADD-CHANNELS
    - CHANNEL-GROUPS-REMOVE-CHANNELS
    - CHANNEL-GROUPS-REMOVE-GROUPS
    - CHANNEL-GROUPS-LIST-CHANNELS-IN-GROUP
  presence:
    - PRESENCE-HERE-NOW
    - PRESENCE-WHERE-NOW
    - PRESENCE-SET-STATE
    - PRESENCE-GET-STATE
    - PRESENCE-HEARTBEAT
  publish:
    - PUBLISH-STORE-FLAG
    - PUBLISH-RAW-JSON
    - PUBLISH-WITH-METADATA
    - PUBLISH-GET
    - PUBLISH-SYNC
    - PUBLISH-ASYNC
  storage:
    - STORAGE-INCLUDE-TIMETOKEN
    - STORAGE-COUNT
    - STORAGE-REVERSE
    - STORAGE-START-END
  time:
    - TIME-TIME
  subscribe:
    - SUBSCRIBE-CHANNELS
    - SUBSCRIBE-CHANNEL-GROUPS
    - SUBSCRIBE-PRESENCE-CHANNELS
    - SUBSCRIBE-PRESENCE-CHANNELS-GROUPS
    - SUBSCRIBE-WILDCARD
supported-platforms:
  - 
    version: PubNub POSIX C SDK
    platforms:
      - Most modern Unix-derived OSes support enough of POSIX to work. For some, like MacOS (OSX) we have special support to handle them not being fully POSIX compliant. Basically, if the OS is released in last 3/4 years, it will most probably work.
      - Some older OSes, like Ubuntu 12.04 or older, may need a few tweaks to work.
      - For TLS/SSL support, we use OpenSSL, and a recent version, 0.9.8 or higher should work. If the user doesn't wish to use TLS/SSL, she doesn't need OpenSSL at all.
  - 
    version: PubNub POSIX C++ SDK
    platforms:
      - Most modern Unix-derived OSes support enough of POSIX to work. For some, like MacOS (OSX) we have special support to handle them not being fully POSIX compliant. Basically, if the OS is released in last 3/4 years, it will most probably work.
      - Some older OSes, like Ubuntu 12.04 or older, may need a few tweaks to work.
      - For TLS/SSL support, we use OpenSSL, and a recent version, 0.9.8 or higher should work. If the user doesn't wish to use TLS/SSL, she doesn't need OpenSSL at all.
      - Some features require C++11 or newer compliant compiler, if you do not have such a compiler you will not be able to use those features (but will be able to use the rest of the POSIX C++ SDK)
  - 
    version: PubNub Windows C SDK
    platforms:
      - Windows 7 or newer with Visual Studio 2008 or newer should work. Newer versions of Clang for Windows and GCC (MINGW or Cygwin) should also work.
      - For TLS/SSL support, we use OpenSSL, and a recent version, 0.9.8 or higher should work. If the user doesn't wish to use TLS/SSL, she doesn't need OpenSSL at all.
  - 
    version: PubNub Windows C++ SDK
    platforms:
      - Windows 7 or newer with Visual Studio 2008 or newer should work. Newer versions of Clang for Windows and GCC (MINGW or Cygwin) should also work.
      - For TLS/SSL support, we use OpenSSL, and a recent version, 0.9.8 or higher should work. If the user doesn't wish to use TLS/SSL, she doesn't need OpenSSL at all.
      - Some features require C++11 or newer compliant compiler, if you do not have such a compiler you will not be able to use those features (but will be able to use the rest of the Windows C++ SDK)
  - 
    version: PubNub FreeRTOS SDK
    platforms:
      - FreeRTOS+ 150825 or newer is supported.Â 
  - 
    version: PubNub Qt SDK
    platforms:
      - Qt5 is fully supported.
      - Qt4 is not supported, but 'C core' is known to build on Qt4 and some features work.
      - Older versions are not supported.
  - 
    version: PubNub mBed SDK
    platforms:
      - mBed 2 is supported.
      - Newer versions should work, but are not supported out of the box.
